{"version":3,"sources":["Account/firebase.js","Account/AuthContext.js","Account/Account.js","Account/Loading.js","Posts/WritePost.js","Posts/Comment.js","Posts/UserPost.js","Posts/UserPosts.js","Account/Dashboard.js","Account/ForgotPassword.js","Account/Login.js","Account/PrivateRoute.js","Account/Register.js","Account/UpdateProfile.js","Navbar/Navbar.js","Posts/AllPosts.js","Account/UserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loadingChildren","setLoadingChildren","loading","setLoading","posts","setPosts","image","setImage","imageForUpload","setImageForUpload","userData","setUserData","lastPost","setLastPost","disabledPosts","setDisabledPosts","loadingPosts","setLoadingPosts","foreignUser","deepai","require","getFullDateValue","dateValue","getDate","today","Date","time","getHours","getMinutes","date","getMonth","getFullYear","getUserData","userId","database","ref","once","then","snapshot","exportVal","name","email","password","a","createUserWithEmailAndPassword","result","uid","set","username","userImage","userBgImg","saveNewPost","postId","comment","imgUrl","postType","val","postImage","user","comments","numComments","likes","likedBy","fetchFirstAllUserPosts","fetchUserPosts","uploadImage","type","img","task","storage","put","on","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","console","log","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","downloadURL","orderByChild","equalTo","exists","forEach","data","key","checkImageForNudes","pickerId","callStandardApi","document","getElementById","output","nsfw_score","e","imageFile","target","files","alert","URL","createObjectURL","array","counter","orderByKey","limitToLast","Promise","resolve","reject","push","reverse","setApiKey","useEffect","onAuthStateChanged","value","signup","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updatePassword","updateEmail","updateUsername","writeNewPost","getUsername","fetchAllUserPosts","arrayPosts","endAt","prepareImageForUpload","Provider","Account","setError","history","useHistory","fileButtonBg","useRef","fileButtonProfile","pushState","className","id","onChange","style","display","src","alt","onClick","current","click","to","Loading","WritePost","title","allPostsLink","postsDiv","fileButton","setComment","postComment","preventDefault","select","getTime","onSubmit","placeholder","trimStart","multiple","accept","hidden","Comment","UserPost","props","setLikes","setNumComments","setComments","isLiked","setIsLiked","disabled","setDisabled","lastComment","setLastComment","loadingComments","setLoadingComments","emojiPicker","setEmojiPicker","commentSection","textarea","loadFirstComments","getTotalComments","length","handleKeyPress","commentId","setTimeout","writeComment","pathname","update","border","color","onKeyPress","onEmojiClick","event","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","map","item","class","data-title","arrayComments","tempArray","counter2","loadComments","UserPosts","Dashboard","window","scroll","top","left","fetchData","ForgotPassword","emailRef","message","setMessage","handleSubmit","required","Login","passwordRef","PrivateRoute","Component","component","rest","render","Register","usernameRef","confirmPasswordRef","writeUserData","UpdateProfile","promises","all","catch","defaultValue","Navbar","scrolled","setScrolled","addEventListener","handleScroll","offset","scrollY","AllPosts","UserProfile","setUser","location","useLocation","AppRouter","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.45e4ab08.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport \"firebase/auth\"\r\n\r\nvar app =  firebase.initializeApp({\r\n    apiKey: \"AIzaSyASt-GU3tXsIWyifq2i2Wlvfa0wn55Us-s\",\r\n    authDomain: \"social-app-a3253.firebaseapp.com\",\r\n    databaseURL: \"https://social-app-a3253-default-rtdb.firebaseio.com\",\r\n    projectId: \"social-app-a3253\",\r\n    storageBucket: \"social-app-a3253.appspot.com\",\r\n    messagingSenderId: \"774022938333\",\r\n    appId: \"1:774022938333:web:9c32b23044db36e059a534\",\r\n    measurementId: \"G-R2P4D23YRW\"\r\n  });\r\n \r\n \r\nexport const auth = app.auth()\r\nexport default app\r\n ","import React,{useContext,useState,useEffect} from 'react'\r\nimport { auth } from './firebase'\r\nimport firebase from 'firebase/app'\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser,setCurrentUser] = useState()\r\n    const [loadingChildren, setLoadingChildren] = useState(true)\r\n    const [loading,setLoading] = useState(true)\r\n    const [posts,setPosts] = useState([])\r\n    const [image,setImage] = useState(\"\")\r\n    const [imageForUpload,setImageForUpload] = useState()\r\n    const [userData,setUserData] = useState([])\r\n    const [lastPost,setLastPost] = useState(0)\r\n    const [disabledPosts,setDisabledPosts] = useState(0)\r\n    const [loadingPosts,setLoadingPosts] = useState(false)\r\n    const [foreignUser, setForeignUser] = useState()\r\n\r\n    const deepai = require('deepai'); \r\n    deepai.setApiKey('d1cbe1ff-200e-447f-8c7f-8d366377582e');\r\n\r\n    function getFullDateValue(dateValue) {\r\n        if(dateValue < 10){\r\n            return '0'+dateValue\r\n        }else{\r\n            return dateValue\r\n        }\r\n    }\r\n    function getDate(){\r\n        var today= new Date()\r\n        return {\r\n            time:today.getHours()+\":\"+getFullDateValue(today.getMinutes()),\r\n            date:getFullDateValue(today.getDate())+'-'+(getFullDateValue(today.getMonth()+1))+'-'+today.getFullYear()\r\n        }\r\n    }\r\n    \r\n    function getUserData(userId) {\r\n        if(currentUser){\r\n                firebase.database().ref(`users/${userId}`).once(\"value\").then(function(snapshot) { \r\n                    setUserData(snapshot.exportVal())\r\n            })\r\n        }\r\n       \r\n    } \r\n   \r\n    async function signup(name,email, password){\r\n \r\n           return( auth.createUserWithEmailAndPassword(email,password).then(function(result) {\r\n            var userId = firebase.auth().currentUser.uid;\r\n            firebase.database().ref('users/' + userId).set({\r\n                username: name,\r\n                email: email,\r\n                userImage: \"images/avatar.png\",\r\n                userBgImg:\"images/bg.jpg\"\r\n              });\r\n        })\r\n           )\r\n     }\r\n     function saveNewPost(postId,comment=\"\",imgUrl=\"\",postType) {\r\n      \r\n        var userId = firebase.auth().currentUser.uid;\r\n        firebase.database().ref('/users/' + userId).once('value').then((snapshot) => {\r\n    \r\n        var username = snapshot.val().username;\r\n        \r\n        firebase.database().ref('Posts/'+postId).set({\r\n            postId:postId,\r\n            comment: comment,\r\n            postImage:imgUrl,\r\n            userId:userId,\r\n            user:username,\r\n            userImage:userData.userImage,\r\n            comments:\"\",\r\n            numComments:0,\r\n            likes:0,\r\n            likedBy:\"\",\r\n            date:getDate()\r\n            });\r\n        }).then(function () {\r\n            if(postType===\"all\"){\r\n                fetchFirstAllUserPosts()\r\n            }else{\r\n                fetchUserPosts()\r\n            \r\n            }\r\n          \r\n        });\r\n        setImage('') \r\n        firebase.database().ref('/users/' + currentUser.uid+\"/posts/\"+postId).set(comment)\r\n   \r\n    }\r\n     function uploadImage(type,img,postId,comment) {\r\n        setLoading(true)\r\n        if(!img){\r\n            setLoading(false)\r\n            return\r\n        }\r\n        let storageRef =  firebase.storage().ref(`${type}/${currentUser.uid}/${img.name}`) \r\n\r\n        let task = storageRef.put(img);\r\n\r\n        task.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n        function(snapshot) {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n        // eslint-disable-next-line default-case\r\n        switch (snapshot.state) {\r\n        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n            console.log('Upload is paused');\r\n            break;\r\n        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n            console.log('Upload is running');\r\n            break;\r\n        }\r\n        }, function(error) {\r\n\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        // eslint-disable-next-line default-case\r\n        switch (error.code) {\r\n        case 'storage/unauthorized':\r\n        // User doesn't have permission to access the object\r\n      \r\n        break;\r\n\r\n        case 'storage/canceled':\r\n         \r\n        // User canceled the upload\r\n        break;\r\n\r\n        case 'storage/unknown':\r\n          \r\n        // Unknown error occurred, inspect error.serverResponse\r\n        break;\r\n        }\r\n        }, function() {\r\n        // Upload completed successfully, now we can get the download URL\r\n        setImageForUpload(\"\")\r\n        task.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n         \r\n            if(type===\"postImage\"){\r\n             \r\n                saveNewPost(postId,comment,downloadURL)\r\n            }else{\r\n               \r\n                firebase.database().ref(`users/${currentUser.uid}/${type}`).set(downloadURL).then(function () {\r\n                     getUserData(currentUser.uid)\r\n                     firebase.database().ref('Posts').orderByChild('userId').equalTo(currentUser.uid).once(\"value\").then(function(snapshot) {\r\n                         if(!snapshot.exists()){\r\n                             setLoading(false)\r\n                             return\r\n                         }\r\n                         snapshot.forEach(function(data) {\r\n                           \r\n                            firebase.database().ref(`/Posts/${data.key}/${type}`).set(downloadURL)\r\n                            fetchUserPosts()\r\n                            setLoading(false)\r\n                         })\r\n                     })\r\n                })\r\n              \r\n            }\r\n           \r\n        });\r\n        });\r\n     }\r\n  \r\n    async function checkImageForNudes(pickerId) {\r\n        var result = await deepai.callStandardApi(\"content-moderation\", {\r\n            image: document.getElementById(pickerId)\r\n        });\r\n       \r\n         if(result.output.nsfw_score>0.049){\r\n             return false\r\n         }else{\r\n             return true\r\n         }\r\n     }\r\n    async function prepareImageForUpload(e,type,pickerId){\r\n       setLoading(true)\r\n        var imageFile = e.target.files[0];\r\n        if(!await checkImageForNudes(pickerId)){\r\n            setLoading(false)\r\n            alert(`\r\n            Your image contains nudity!\r\n            You can't upload that picture!\r\n            `)\r\n            return\r\n        }\r\n        setImageForUpload(imageFile)\r\n    \r\n        if(type==='tempImage'){\r\n            setImage(URL.createObjectURL(imageFile))\r\n            setLoading(false)\r\n            return\r\n        }else{\r\n            uploadImage(type,imageFile)\r\n        }\r\n       \r\n    }\r\n    function fetchFirstAllUserPosts() {\r\n       \r\n        var array=[]\r\n        var counter = 0\r\n       \r\n       firebase.database().ref(`Posts`).orderByKey().limitToLast(3).once(\"value\",function (snapshot) {\r\n            \r\n            snapshot.forEach(function(data) {\r\n               \r\n                firebase.database().ref(`/Posts/${data.key}`).once('value').then((snapshot) => {\r\n                \r\n                    counter++\r\n                    if(counter<2){\r\n                        setLastPost(data.key)\r\n                    }\r\n                        array=[snapshot.exportVal(),...array]\r\n                        setPosts(array)     \r\n                })\r\n               \r\n            })\r\n         \r\n            })\r\n            setLoading(false)\r\n            setDisabledPosts(false)\r\n         \r\n    }\r\n\r\n    function fetchAllUserPosts() {\r\n        setLoadingPosts(true)\r\n        var arrayPosts=posts\r\n        var counter = 0\r\n        firebase.database().ref(`Posts`).orderByKey().endAt(lastPost).limitToLast(6).once(\"value\",function (snapshot) {\r\n            if(!snapshot.exists()){\r\n                setDisabledPosts(true)\r\n            }\r\n            snapshot.forEach(function(data) {\r\n               \r\n                firebase.database().ref(`/Posts/${data.key}`).once('value').then((snapshot) => {\r\n                    if(data.key!==lastPost){\r\n                    counter++;\r\n                    if(counter < 2){\r\n                        setLastPost(data.key)\r\n                    }\r\n                      \r\n                    \r\n                    arrayPosts=[...arrayPosts,snapshot.exportVal()]\r\n                }\r\n                   \r\n                }).then(function () {  \r\n                        setPosts(arrayPosts)\r\n                        setLoadingPosts(false)\r\n                      \r\n                        if(counter<5){\r\n                            setDisabledPosts(true)\r\n                        }else{\r\n                            setDisabledPosts(false)\r\n                        }\r\n                    \r\n                })\r\n            })\r\n        })\r\n\r\n    }\r\n    \r\n    async function fetchUserPosts(userId) {\r\n        \r\n        let p = new Promise((resolve,reject)=>{\r\n\r\n        \r\n            firebase.database().ref('Posts').orderByChild('userId').equalTo(firebase.auth().currentUser.uid).on(\"value\", function(snapshot) {\r\n            var array=[]\r\n    \r\n            if(!snapshot.exists()){\r\n                setLoading(false)\r\n                return\r\n            }\r\n            snapshot.forEach(function(data) {\r\n                firebase.database().ref('/Posts/' + data.key).once('value').then((snapshot) => {\r\n                    array.push(snapshot.exportVal())\r\n            \r\n                }).then(function () {\r\n                    resolve(array)\r\n                  \r\n                });\r\n            })\r\n        })\r\n        })\r\n        p.then((result) =>{\r\n            setPosts(result.reverse())\r\n            setLoading(false)\r\n        })\r\n        \r\n    }\r\n    \r\n    function writeNewPost(postId,comment,postType=\"\") {\r\n        \r\n        setLoading(true)\r\n        if(imageForUpload){\r\n            uploadImage(\"postImage\",imageForUpload,postId,comment)\r\n            setImageForUpload('')\r\n        }else{\r\n            saveNewPost(postId,comment,\"\",postType)\r\n        }\r\n   \r\n    \r\n    }\r\n\r\n    function getUsername() {\r\n    firebase.database().ref('users').orderByChild('email').equalTo(currentUser.email).on(\"value\", function(snapshot) {\r\n        snapshot.forEach(function(data) {\r\n            return firebase.database().ref('users/'+data.key+'/username')\r\n        });\r\n    });\r\n    }\r\n    function login(email,password) {\r\n    return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n    \r\n    function logout() {\r\n        setPosts([])\r\n        setUserData([])\r\n        auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n    //UPDATES\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n    \r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n    function updateUsername(username) {\r\n        setLoading(true)\r\n        firebase.database().ref(`users/${currentUser.uid}/user`).set(username).then(function () {\r\n            getUserData()\r\n            firebase.database().ref('Posts').orderByChild('userId').equalTo(currentUser.uid).once(\"value\").then(function(snapshot) {\r\n                if(!snapshot.exists()){\r\n                    setLoading(false)\r\n                    return\r\n                }\r\n                snapshot.forEach(function(data) {\r\n                  \r\n                   firebase.database().ref(`/Posts/${data.key}/user`).set(username)\r\n                   fetchUserPosts()\r\n                   setLoading(false)\r\n                })\r\n            })\r\n    })\r\n}\r\n\r\n     useEffect(() => {\r\n        \r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoadingChildren(false)\r\n        })\r\n\r\n        return unsubscribe\r\n     }, [])\r\n    const value ={\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        getUserData,\r\n        userData,\r\n        foreignUser,\r\n        loading,\r\n        loadingPosts,\r\n        disabledPosts,\r\n        resetPassword,\r\n        updatePassword,\r\n        updateEmail,\r\n        updateUsername,\r\n        writeNewPost,\r\n        getUsername,\r\n        fetchUserPosts,\r\n        fetchAllUserPosts,\r\n        fetchFirstAllUserPosts,\r\n        uploadImage,\r\n        prepareImageForUpload,\r\n        image,\r\n        posts,\r\n        setPosts\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loadingChildren && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React,{useState,useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\nimport { FaCamera } from 'react-icons/fa'\r\nfunction Account() {\r\n \r\n    const [error,setError] = useState()\r\n    const history = useHistory()\r\n    const fileButtonBg = useRef()\r\n    const fileButtonProfile = useRef()\r\n    const { logout,userData,prepareImageForUpload } = useAuth()\r\n\r\n    async function  handleLogout() {\r\n        setError('')\r\n        try{\r\n            await logout()\r\n            history.pushState('/login')\r\n        }catch{\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div className=\"account\">\r\n        <div className=\"account-container\">\r\n            <input id=\"fileButtonBg\" type=\"file\" ref={fileButtonBg} onChange={(e)=>prepareImageForUpload(e,\"userBgImg\",\"fileButtonBg\")} style={{display:'none'}}/>\r\n            <input id=\"fileButtonProfile\" type=\"file\" ref={fileButtonProfile} onChange={(e)=>prepareImageForUpload(e,\"userImage\",\"fileButtonProfile\")} style={{display:'none'}}/>\r\n            {error && <p>{error}</p>}\r\n          \r\n\r\n             <div className=\"user-bg-img\">\r\n             {userData.userBgImg && <img src={userData.userBgImg} alt=\"background-img\"/>}\r\n             <button className={`user-change-bg-btn ${!userData.userBgImg && 'no-bg'}`} onClick={()=>fileButtonBg.current.click()}><p><FaCamera/></p> Background Image</button>\r\n            </div>\r\n           \r\n            <div className=\"user-image\" onClick={()=>fileButtonProfile.current.click()}>\r\n                <span><FaCamera/></span>\r\n                <img src={userData.userImage} alt=\"user img\"/>\r\n            </div>\r\n            <p className=\"account-username\">{userData.username}</p>\r\n            <Link className=\"profile-update-btn\" to='updateProfile'>Update Profile</Link>\r\n            <button  className=\"logout-btn\" onClick={handleLogout}>Log Out</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React from 'react'\r\nimport \"./Loading.css\"\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n             <div className=\"lds-ring\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n                <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React,{useEffect,useState,useRef} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../Account/AuthContext'\r\n\r\n\r\nfunction WritePost({type,title,allPostsLink}) {\r\n\r\n    const postsDiv = useRef()\r\n    const fileButton = useRef()\r\n  \r\n    const [error,setError] = useState('')\r\n    const { currentUser,writeNewPost, prepareImageForUpload,image,getUserData } = useAuth()\r\n    const [comment,setComment] = useState(\"\")\r\n    const [postType,setPostType] = useState(type)\r\n    \r\n    const postComment = useRef()\r\n\r\n\r\n   \r\n    useEffect(() => {\r\n        if(currentUser){\r\n            getUserData(currentUser.uid) \r\n        }\r\n                   \r\n    }, [])\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n      \r\n        if(comment===\"\" && !image){\r\n            setError(true)\r\n            postComment.current.select()\r\n            return\r\n        }else{\r\n            setError(false)\r\n        }\r\n     \r\n\r\n        var postId = new Date().getTime()\r\n            \r\n            writeNewPost(postId,comment,postType)\r\n            setComment('')\r\n            postComment.current.select()\r\n           \r\n    }\r\n\r\n    return (\r\n      \r\n        <div ref={postsDiv} className=\"post\">\r\n        \r\n        <form className=\"write-post-form\" onSubmit={handleSubmit}>\r\n            {!currentUser ? <p className=\"no-user-message\">If you want to post, comment or like\r\n            <Link to=\"/login\" className=\"login-btn\"> Log In </Link> or \r\n            <Link to=\"/signup\" className=\"sign-up-btn\"> Sign Up </Link> if you don't have an account.</p>   \r\n            :\r\n            <>\r\n            <h2 className=\"posts-title\">{title}</h2>\r\n            <Link to=\"/\" className=\"link all-posts-link\">{allPostsLink}</Link>\r\n            {error && <p className=\"error\">Please write a comment or add an image</p>}\r\n            <textarea \r\n            ref={postComment} \r\n            value={comment} \r\n            className=\"write-post-desc\" \r\n            placeholder=\"What are your thoughts?\" \r\n            onChange={(e)=>(setComment(e.target.value.trimStart()))}>\r\n            </textarea>\r\n\r\n            <input \r\n            type=\"file\" \r\n            ref={fileButton} \r\n            id=\"filePostButton\" \r\n            multiple=\"\" \r\n            name=\"file\" \r\n            accept=\"image/*\" \r\n            hidden=\"hidden\" \r\n            onChange={(e)=>prepareImageForUpload(e,\"tempImage\",\"filePostButton\")}/>\r\n\r\n            <button \r\n            type=\"button\" \r\n            className=\"post-img-btn\" \r\n            onClick={()=>fileButton.current.click()}>\r\n                {image ? 'Change Image' : 'Add Image'}\r\n            </button>\r\n            \r\n            {image && \r\n            <div className=\"post-image\">\r\n                <img src={image} alt=\"Post Img\"/>\r\n            </div>\r\n            }\r\n            <button className=\"post-btn\">Post</button>\r\n            </>\r\n            }\r\n        </form>\r\n        </div>\r\n       \r\n  \r\n   \r\n    )\r\n}\r\n\r\nexport default WritePost\r\n","import React from 'react'\r\n\r\nfunction Comment({comment}) {\r\n    return (\r\n        <div className=\"user-comment-container\">\r\n            <div className=\"user-comment-image user-img-bg\">\r\n                <img src={comment.userImage} alt=\"user\"/>\r\n            </div>\r\n            <div className=\"user-comment-details\">\r\n                <p className=\"user-comment-username\">{comment.username}</p>\r\n                <p className=\"user-comment\">{comment.comment}</p>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React,{useState,useEffect,useRef,useLocation} from 'react'\r\nimport firebase from 'firebase'\r\nimport { useAuth } from '../Account/AuthContext'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport Comment from './Comment'\r\nimport { Link } from 'react-router-dom'\r\nimport Picker from 'emoji-picker-react';\r\nimport { BiSmile } from 'react-icons/bi' \r\nimport \"./Comments.css\"\r\nfunction UserPost(props) {\r\n\r\n    const {currentUser,getUserData,userData} = useAuth()\r\n\r\n    const [likes,setLikes] = useState(props.likes)\r\n    const [numComments,setNumComments] = useState(0)\r\n    const [comment,setComment] = useState(\"\")\r\n    const [comments,setComments] = useState([])\r\n    const [isLiked,setIsLiked] = useState(false) \r\n    const [disabled, setDisabled] = useState(false)\r\n    const [lastComment, setLastComment] = useState()\r\n    const [error,setError] = useState('')\r\n    const [loadingComments,setLoadingComments] = useState(false)\r\n    const [emojiPicker, setEmojiPicker] = useState(false);\r\n\r\n    const commentSection = useRef()\r\n    const textarea = useRef()\r\n\r\n    useEffect(() => {\r\n     \r\n        if(currentUser){\r\n            getUserData(currentUser.uid)\r\n        }\r\n        getTotalComments()\r\n        loadFirstComments()\r\n        if(currentUser){\r\n            firebase.database().ref(`Posts/${props.postId}/likedBy`).on(\"value\", function(snapshot) {\r\n                snapshot.forEach(function(data) {\r\n                   \r\n                    if(currentUser.uid===data.key){\r\n                        setIsLiked(true)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        \r\n\r\n    }, [])\r\n    useEffect(() => {\r\n       if(comments.length >= numComments){\r\n           setDisabled(true)\r\n       }else{\r\n           setDisabled(false)\r\n       }\r\n    }, [comments,numComments])\r\n  \r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setComment(comment+emojiObject.emoji)\r\n        textarea.current.select()\r\n      };\r\n\r\n    function loadFirstComments() {\r\n       setLoadingComments(true)\r\n        var array=[]\r\n        var counter = 0\r\n       \r\n       firebase.database().ref(`Posts/${props.postId}/comments`).orderByKey().limitToLast(3).once(\"value\",function (snapshot) {\r\n            \r\n            snapshot.forEach(function(data) {\r\n               \r\n                firebase.database().ref(`/Posts/${props.postId}/comments/${data.key}`).once('value').then((snapshot) => {\r\n                \r\n                    counter++\r\n                    if(counter < 2){\r\n                        setLastComment(data.key)\r\n                    }\r\n                    array=[snapshot.exportVal(),...array]\r\n                    setComments(array)\r\n                \r\n                })\r\n               \r\n            })\r\n            setLoadingComments(false)\r\n            })\r\n         \r\n         \r\n    }\r\n\r\n    const getTotalComments = () => {\r\n         firebase.database().ref(`Posts/${props.postId}/numComments`).on(\"value\",function (snapshot) {\r\n           \r\n            setNumComments(snapshot.exportVal())\r\n            loadFirstComments()\r\n        })\r\n    }\r\n  \r\n    function loadComments() {\r\n        setLoadingComments(true)\r\n        var arrayComments=comments\r\n       \r\n        var tempArray = [] \r\n        setComment([])\r\n        var counter = 0\r\n        var counter2= 0;\r\n      \r\n        firebase.database().ref(`Posts/${props.postId}/comments`).orderByKey().endAt(lastComment).limitToLast(4).once(\"value\",function (snapshot) {\r\n            snapshot.forEach(function(data) {\r\n               \r\n                firebase.database().ref(`/Posts/${props.postId}/comments/${data.key}`).once('value').then((snapshot) => {\r\n                    if(data.key!==lastComment){\r\n                    counter++;\r\n                    if(counter < 2){\r\n                        setLastComment(data.key)\r\n                    }\r\n                    \r\n                    tempArray=[snapshot.exportVal(),...tempArray]\r\n                }\r\n                   \r\n                }).then(function () {\r\n                    counter2++\r\n                  \r\n                    if(comments.length+counter2>numComments && counter2 !==3){\r\n                        arrayComments=[...arrayComments,...tempArray]\r\n                        setComments(arrayComments)\r\n                    }\r\n                    if(counter2 === 3){\r\n                        arrayComments=[...arrayComments,...tempArray]\r\n                        setComments(arrayComments)\r\n                    }\r\n                })\r\n            })\r\n            setLoadingComments(false)\r\n\r\n        })\r\n        \r\n    }\r\n    function writeComment() {\r\n        if(!currentUser){\r\n            setError(\"You need an account to Like or Write a comment!\")\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },2000)\r\n        }else{\r\n            var commentId = new Date().getTime()\r\n            firebase.database().ref(`Posts/${props.postId}/comments/${commentId}`).set({\r\n                comment:comment,\r\n                username:userData.username,\r\n                userImage:userData.userImage,\r\n                \r\n            })\r\n            firebase.database().ref(`Posts/${props.postId}/numComments`).set(numComments+1).then(function () {\r\n                getTotalComments()\r\n              \r\n            })\r\n        }\r\n    }\r\n    const handleKeyPress = (e) =>{\r\n        if(e.key === 'Enter'){\r\n            if(comment===\"\"){\r\n                return\r\n            }\r\n            setEmojiPicker(false)\r\n            writeComment()\r\n            setComment('')\r\n        }\r\n    }\r\n    function updateLikes(postId) {\r\n        if(!currentUser){\r\n            setError(\"You need an account to Like or Write a comment!\")\r\n            setTimeout(()=>{\r\n                setError('')\r\n            },4000)\r\n        }else{\r\n            setLikes(likes+1)\r\n            setIsLiked(true)\r\n            firebase.database().ref(`Posts/${postId}`).update({\r\n                likes:likes+1,\r\n            })\r\n            \r\n            firebase.database().ref(`Posts/${postId}/likedBy/${currentUser.uid}`).set(currentUser.uid)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n\r\n            <Link className=\"post-user\" \r\n             to={!currentUser ? {\r\n                pathname: '/user-profile',\r\n                state:props.userId\r\n             }:\r\n                currentUser.uid===props.userId ? {\r\n                pathname: '/account',\r\n               \r\n            }:{\r\n                pathname: '/user-profile',\r\n                state:props.userId\r\n            }}>\r\n                <div className=\"post-user-img user-img-bg\">\r\n                    <img src={props.userImage} alt=\"profile pic\"/>\r\n                </div>\r\n                <div className=\"post-user-details\">\r\n                    <span className=\"post-user-username\">{props.user}</span>\r\n                    <div className=\"post-user-fulldate\">\r\n                        <span className=\"post-user-date\">{props.date.date}</span>\r\n                        <span className=\"post-user-time\"> <span className=\"in\">in</span>{props.date.time}</span>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <p className=\"post-desc\">{props.comment}</p>\r\n            <div className=\"post-image\">\r\n                    <img src={props.postImage} alt=\"\"/>\r\n            </div>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <div className=\"likes-and-comments\">\r\n                <div className={`likes`}>\r\n                    <button disabled={isLiked} onClick={()=>updateLikes(props.postId)} className={`likes-btn ${isLiked && 'liked'}`}><span className=\"like-icon\"><AiFillLike/></span>Like</button>\r\n                    <span className=\"num-likes\">{likes}</span>\r\n                </div>\r\n                <div className=\"comments-info\">\r\n                   \r\n                    <span>{numComments} comments</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"write-comment-container\" style={emojiPicker ? {border:\"1px solid var(--red)\"}:{color:\"\"}}>\r\n            <textarea value={comment}\r\n                ref={textarea}\r\n                onChange={(e)=>setComment(e.target.value.trimStart())} \r\n                onKeyPress={(e)=>handleKeyPress(e)} \r\n                className=\"write-comment\" \r\n                placeholder=\"Write a comment\">\r\n             </textarea>\r\n            <div className=\"emoji-picker\" onClick={()=>setEmojiPicker(!emojiPicker)}><BiSmile/></div>\r\n             </div>\r\n             {emojiPicker && <Picker onEmojiClick={onEmojiClick} disableSearchBar=\"true\" disableSkinTonePicker=\"true\" />}\r\n            <div  ref={commentSection} className=\"comments\">\r\n                {comments.map(item =>{\r\n                    return <Comment comment={item}/>\r\n                    \r\n                    \r\n                })}\r\n                {!loadingComments ? \r\n                <button \r\n                className=\"more-comments-btn\" \r\n                disabled={disabled} \r\n                style={!disabled ? {color:'var(--red)'} : {color:'var(--grey)'}} \r\n                onClick={()=>{\r\n                        loadComments()\r\n                }}>{!disabled ? 'Load more comments' : ''}</button>\r\n                :\r\n                <div class=\"loading-posts\">\r\n                    <div class=\"snippet\" data-title=\".dot-falling\">\r\n                    <div class=\"stage\">\r\n                        <div class=\"dot-falling\"></div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPost\r\n","import React from 'react'\r\nimport { useAuth } from '../Account/AuthContext'\r\nimport UserPost from './UserPost'\r\n\r\nfunction UserPosts() {\r\n    const { posts } = useAuth()\r\n   \r\n    return (\r\n        <div className=\"allposts-container\">\r\n             {posts.map((item)=>{\r\n                return <UserPost key={item.postId} {...item}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPosts\r\n","import React,{useEffect} from 'react'\r\nimport { useAuth } from './AuthContext'\r\nimport './Posts.css'\r\n\r\nimport Account from './Account'\r\nimport Loading from './Loading'\r\nimport WritePost from '../Posts/WritePost'\r\nimport UserPosts from '../Posts/UserPosts'\r\nfunction Dashboard() {\r\n\r\n    const {currentUser,loading,fetchUserPosts} = useAuth()\r\n\r\n    useEffect(() => {\r\n        fetchUserPosts()\r\n        window.scroll({\r\n            top: 0, \r\n            left: 0\r\n           })\r\n    }, [])\r\n    \r\n\r\n    if(currentUser){\r\n    return (\r\n       \r\n        <div className=\"profile-page\">\r\n           \r\n            {loading && <Loading/>}\r\n            <Account/>\r\n            <WritePost fetchData=\"myPosts\" title=\"Your Posts\" allPostsLink=\"See all posts\"/>\r\n            <UserPosts/>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import React,{useRef, useState} from 'react'\r\nimport { useAuth } from './AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n function ForgotPassword() {\r\n\r\n    const emailRef = useRef()\r\n\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message,setMessage] = useState(\"\")\r\n\r\n    const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your email for further instructions\")\r\n        }catch{\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-container\">\r\n            <h3>Password Rest</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            {message && <p className=\"account-message\">{message}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef} required/>\r\n                </div>\r\n              \r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Reset Password</button>\r\n                <Link className=\"acc-link\" to='/login'>Login</Link>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                Need an account?<Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n  ","import React,{useRef, useState} from 'react'\r\nimport { useAuth } from './AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n function Login() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login,userData } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value,passwordRef.current.value)\r\n            history.push('/account')\r\n        }catch{\r\n            setError('Wrong username or password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-auth-container\">\r\n            <h3>Log In</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef}/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" placeholder=\"password\" ref={passwordRef}/>\r\n                </div>\r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Log In</button>\r\n                <Link className=\"link forgot-password\" to='forgotPassword'>Forgot Password</Link>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                <p>Need an account? <Link className=\"link\" to=\"/signup\"> Sign up</Link></p> \r\n                \r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n  ","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"./AuthContext\"\r\n\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React,{useRef, useState} from 'react'\r\nimport './Account.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\n\r\n function Register() {\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n\r\n    const { signup,writeUserData,currentUser } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message,setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        if(passwordRef.current.value.length<6){\r\n            return setError(\"Your password is too short\")\r\n        }\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n       \r\n            await signup(usernameRef.current.value,emailRef.current.value,passwordRef.current.value)\r\n\r\n            setTimeout(()=>{ \r\n              \r\n                history.push('/')\r\n            },1000)\r\n            setMessage('Your account has been created successfully!')\r\n            \r\n         \r\n        }catch{\r\n            setError('Failed to create an account')\r\n        }\r\n        \r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-auth-container\">\r\n            <h3>Sign Up</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            {message && <p className=\"account-message\">{message}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n            <div className=\"input-container\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" placeholder=\"username\" ref={usernameRef} required/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef} required/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" placeholder=\"password\" ref={passwordRef} required/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\" placeholder=\"confirm password\" ref={confirmPasswordRef} required/>\r\n                </div>\r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Register</button>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                <p>Already have an account? <Link className=\"link\" to='/login'> Log In</Link></p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n  ","import React,{useRef, useState} from 'react'\r\nimport './Account.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\n\r\n function UpdateProfile() {\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n    \r\n    const { currentUser, updateEmail, updatePassword, updateUsername, userData,loading } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const history = useHistory()\r\n\r\n     const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        if(usernameRef.current.value){\r\n            promises.push(await updateUsername(usernameRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/account')\r\n        }).catch(()=>{\r\n            setError('Failed to update account')\r\n        })\r\n       \r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-auth-container\">\r\n            <h3>Update Profile</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n            <div className=\"input-container\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={usernameRef} defaultValue={userData.username}/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\" ref={confirmPasswordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                </div>\r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Update</button>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                <Link className=\"link\" to='/account'>Cancel</Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n  ","import React,{useState,useEffect,useRef} from 'react'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../Account/AuthContext'\r\nimport './Navbar.css'\r\nimport { BsArrowRightShort } from 'react-icons/bs'\r\nfunction Navbar() {\r\n\r\n    const {logout,getUserData,userData,currentUser} = useAuth()\r\n\r\n    const [scrolled,setScrolled] = useState()\r\n    const [error,setError] = useState('')\r\n\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        window.addEventListener('scroll',handleScroll)\r\n        if(currentUser){\r\n            getUserData(currentUser.uid)\r\n        }\r\n      \r\n    }, [])\r\n    const handleScroll = () => {\r\n        const offset=window.scrollY;\r\n        if(offset > 0 ){\r\n          setScrolled(true);\r\n        }\r\n        else{\r\n          setScrolled(false);\r\n        }\r\n      }   \r\n\r\n      async function  handleLogout() {\r\n   \r\n        try{\r\n            \r\n            await logout()\r\n            history.push(\"/login\")\r\n           \r\n        }catch{\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n    return (\r\n        <div className={`social-nav ${scrolled && 'nav-fixed'}`}>\r\n    \r\n            <Link to=\"/\" className=\"social-nav-title\">Social App</Link>\r\n            {error && alert(error)}\r\n           \r\n            {userData.email ? \r\n                <div className=\"social-nav-user\">\r\n                <Link to=\"/account\" className=\"social-nav-user-details\">\r\n                    <p className=\"go-to\">Go To <BsArrowRightShort/></p>\r\n                    <div className=\"social-nav-user-img user-img-bg\">\r\n                        <img src={userData.userImage} alt=\"\" onClick={()=><Redirect to=\"/\"/>}/>\r\n                    </div>\r\n                    <h2 className=\"social-nav-username\">{userData.username}</h2>\r\n                   \r\n                   \r\n                    </Link>\r\n                     <button className=\"link logout\" onClick={handleLogout}>Log Out</button>\r\n                     </div>\r\n                :\r\n             \r\n                <div className=\"social-nav-btn-container\">\r\n                     \r\n                    <Link to='/login' className=\"link login\">Log In</Link>\r\n                    <Link to='/signup' className=\"link signup\">Sign Up</Link>\r\n                </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React,{useEffect} from 'react'\r\nimport { useAuth } from '../Account/AuthContext'\r\nimport Loading from '../Account/Loading'\r\nimport './AllPosts.css'\r\nimport WritePost from './WritePost'\r\nimport UserPosts from './UserPosts'\r\n\r\n\r\nfunction AllPosts() {\r\n\r\n    const { loading,loadingPosts,fetchFirstAllUserPosts,disabledPosts,fetchAllUserPosts } = useAuth()\r\n    useEffect(() => {\r\n     \r\n        fetchFirstAllUserPosts()\r\n        window.scroll({\r\n            top: 0, \r\n            left: 0\r\n           })\r\n    }, [])\r\n    return (\r\n            <div  className=\"allposts\" >\r\n                 {loading && <Loading/>}\r\n                <WritePost title=\"All Posts\" allPostsLink=\"\" type=\"all\"/>\r\n                <UserPosts/>\r\n\r\n                {!loadingPosts ? \r\n                <button\r\n                    disabled={disabledPosts} \r\n                    className=\"fetch-more-posts\"\r\n                    style={!disabledPosts ? {color:'var(--red)'} : {color:'var(--grey)'}}\r\n                    onClick={fetchAllUserPosts}>\r\n                    {disabledPosts ? \"No more Posts\" : \"Load more posts\"}\r\n                </button>\r\n                :\r\n                <div class=\"loading-posts\">\r\n                    <div class=\"snippet\" data-title=\".dot-falling\">\r\n                    <div class=\"stage\">\r\n                        <div class=\"dot-falling\"></div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n              \r\n            </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default AllPosts\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\nimport firebase from 'firebase'\r\nimport Loading from './Loading'\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [ loading,setLoading ] = useState()\r\n    const [user,setUser] = useState(\"\")\r\n    const location = useLocation()\r\n\r\n    const history = useHistory()\r\n    var id = location.state\r\n    useEffect(() => {\r\n        if(!id){\r\n            history.push(\"/\")\r\n        }\r\n        getUserData()\r\n    }, []) \r\n    function getUserData() {\r\n        setLoading(true)\r\n                    firebase.database().ref(`users/${id}`).once(\"value\").then(function(snapshot) { \r\n                    setUser(snapshot.exportVal())\r\n            }).then(()=>{\r\n                    setLoading(false)\r\n            })\r\n       \r\n    }\r\n\r\n        return (\r\n            <div className=\"account\">\r\n                {loading && <Loading/>}\r\n            \r\n            <div className=\"account-container\">\r\n                 <div className=\"user-bg-img\">\r\n                 {user.userBgImg && <img src={user.userBgImg} alt=\"background-img\"/>}\r\n                </div>\r\n                <div className=\"user-image\">\r\n                    <img src={user.userImage} alt=\"user img\"/>\r\n                </div>\r\n                <p className=\"account-username\">{user.username}</p>\r\n            </div>\r\n            </div>\r\n        )\r\n \r\n}\r\n\r\nexport default UserProfile\r\n","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {FirebaseDatabaseProvider} from '@react-firebase/database'\nimport { AuthProvider } from './Account/AuthContext'\nimport Dashboard from './Account/Dashboard'\nimport ForgotPassword from './Account/ForgotPassword'\nimport Login from './Account/Login'\nimport PrivateRoute from './Account/PrivateRoute'\nimport Register from './Account/Register'\nimport UpdateProfile from './Account/UpdateProfile'\nimport Navbar from './Navbar/Navbar'\nimport AllPosts from './Posts/AllPosts'\nimport './App.css'\nimport UserProfile from './Account/UserProfile'\nimport NotFound from './NotFound'\nfunction AppRouter() {\n    return (\n        <Router>\n            <Switch>\n              \n                <FirebaseDatabaseProvider>\n                <AuthProvider>\n                <Navbar/>\n                    <Route exact path=\"/\" component={AllPosts}></Route>\n                    <PrivateRoute exact path=\"/account\" component={Dashboard}></PrivateRoute>\n                    <PrivateRoute exact path=\"/updateProfile\" component={UpdateProfile}></PrivateRoute>\n                    <Route path=\"/user-profile\" component={UserProfile}></Route>\n                    <Route exact path=\"/signup\" component={Register}></Route>\n                    <Route path=\"/login\" component={Login}></Route>\n                    <Route path=\"/forgotPassword\" component={ForgotPassword}></Route>\n                    {/* <Route component={NotFound}></Route> */}\n                </AuthProvider>\n                \n                </FirebaseDatabaseProvider>\n                \n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}