{"version":3,"sources":["Account/firebase.js","Account/AuthContext.js","Account/Dashboard.js","Account/ForgotPassword.js","Account/Login.js","Account/PrivateRoute.js","Account/Register.js","Account/UpdateProfile.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updatePassword","updateEmail","Provider","Dashboard","error","setError","history","useHistory","a","pushState","className","style","fontWeight","to","onClick","ForgotPassword","emailRef","useRef","message","setMessage","handleSubmit","e","preventDefault","current","onSubmit","type","placeholder","ref","required","disabled","Login","passwordRef","push","PrivateRoute","Component","component","rest","render","props","Register","confirmPasswordRef","setTimeout","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","AppRouter","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.fb8e300d.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nvar app =  firebase.initializeApp({\r\n    apiKey: \"AIzaSyA5SkY3x5JrDdeui5a21qBA_i3BhrMgXdU\",\r\n    authDomain: \"auth-development-6df4e.firebaseapp.com\",\r\n    projectId: \"auth-development-6df4e\",\r\n    storageBucket: \"auth-development-6df4e.appspot.com\",\r\n    messagingSenderId: \"822536297998\",\r\n    appId: \"1:822536297998:web:66a5635d3452d49a96e65f\"\r\n});\r\nexport const auth = app.auth()\r\nexport default app\r\n ","import React,{useContext,useState,useEffect} from 'react'\r\nimport { auth } from './firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser,setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n     }\r\n\r\n     function login(email,password) {\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n     }\r\n     \r\n     function logout() {\r\n        return auth.signOut()\r\n     }\r\n   \r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n    \r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n     useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n     }, [])\r\n    const value ={\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updatePassword,\r\n        updateEmail\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport { useAuth } from './AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nfunction Dashboard() {\r\n\r\n    const [error,setError] = useState('')\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function  handleLogout() {\r\n        setError('')\r\n        try{\r\n            await logout()\r\n            history.pushState('/login')\r\n        }catch{\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-container\">\r\n                {error && <p>{error}</p>}\r\n                <h3>Profile</h3>\r\n                <p className=\"profile-email\"><span style={{fontWeight:\"900\"}}>Email:</span> { currentUser.email }</p>\r\n                <Link className=\"profile-update-btn\" to='updateProfile'>Update Profile</Link>\r\n                <button  className=\"logout-btn\" onClick={handleLogout}>Log Out</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React,{useRef, useState} from 'react'\r\nimport { useAuth } from './AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n function ForgotPassword() {\r\n\r\n    const emailRef = useRef()\r\n\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message,setMessage] = useState(\"\")\r\n\r\n    const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your email for further instructions\")\r\n        }catch{\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-container\">\r\n            <h3>Password Rest</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            {message && <p className=\"account-message\">{message}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef} required/>\r\n                </div>\r\n              \r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Reset Password</button>\r\n                <Link className=\"acc-link\" to='/login'>Login</Link>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                Need an account?<Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n  ","import React,{useRef, useState} from 'react'\r\nimport { useAuth } from './AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n function Login() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value,passwordRef.current.value)\r\n            history.push('/')\r\n        }catch{\r\n            setError('Wrong username or password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-container\">\r\n            <h3>Log In</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef}/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" placeholder=\"password\" ref={passwordRef}/>\r\n                </div>\r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Log In</button>\r\n                <Link className=\"forgot-password\" to='forgotPassword'>Forgot Password</Link>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                Need an account? <Link to=\"/signup\"> Sign up</Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n  ","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"./AuthContext\"\r\n\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React,{useRef, useState} from 'react'\r\nimport './Account.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\n\r\n function Register() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message,setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const  handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value,passwordRef.current.value)\r\n            setMessage('Your account has been created successfully!')\r\n            setTimeout(()=>{\r\n                history.push('/')\r\n            },1000 )\r\n        }catch{\r\n            setError('Failed to create an account')\r\n        }\r\n        \r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-container\">\r\n            <h3>Sign Up</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            {message && <p className=\"account-message\">{message}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef} required/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" placeholder=\"password\" ref={passwordRef} required/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\" placeholder=\"confirm password\" ref={confirmPasswordRef} required/>\r\n                </div>\r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Register</button>\r\n            </form>\r\n            <div className=\"acc-link\">\r\n                Already have an account? <Link to='/login'> Log In</Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n  ","import React,{useRef, useState} from 'react'\r\nimport './Account.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from './AuthContext'\r\n\r\n function UpdateProfile() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n    const { currentUser, updateEmail, updatePassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const  handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value){\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(()=>{\r\n            setError('Failed to update account')\r\n        }).finally(() =>{\r\n            setLoading(false)\r\n        })\r\n       \r\n    }\r\n    return (\r\n        <div className=\"account\">\r\n            <div className=\"account-container\">\r\n            <h3>Update Profile</h3>\r\n            {error && <p className=\"form-error\">{error}</p>}\r\n            <form className=\"account-form\" onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" placeholder=\"email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Confirm Password</label>\r\n                    <input type=\"password\" ref={confirmPasswordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                </div>\r\n                <button disabled={loading} className=\"form-btn\" type=\"submit\" >Update</button>\r\n            </form>\r\n            <div className=\"acc-link-container\">\r\n                <Link className=\"acc-link\" to='/'>Cancel</Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n  ","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { AuthProvider } from './Account/AuthContext'\nimport Dashboard from './Account/Dashboard'\nimport ForgotPassword from './Account/ForgotPassword'\nimport Login from './Account/Login'\nimport PrivateRoute from './Account/PrivateRoute'\nimport Register from './Account/Register'\nimport UpdateProfile from './Account/UpdateProfile'\nfunction AppRouter() {\n    return (\n        <Router>\n            <Switch>\n                <AuthProvider>\n                    <PrivateRoute exact path=\"/\" component={Dashboard}></PrivateRoute>\n                    <PrivateRoute exact path=\"/updateProfile\" component={UpdateProfile}></PrivateRoute>\n                    <Route exact path=\"/signup\" component={Register}></Route>\n                    <Route path=\"/login\" component={Login}></Route>\n                    <Route path=\"/forgotPassword\" component={ForgotPassword}></Route>\n                </AuthProvider>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}